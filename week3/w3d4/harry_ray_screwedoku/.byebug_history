quit
display grid.length
s
disp row.join(" ")
disp i
disp (0..8).to_a.join(" ")
disp grid
quit
grid[pos]
disp y
disp x
disp pos
disp grid
s
display tile.value
display tile
disp value
disp pos
disp y
disp x
quit
q
disp row
disp nums
disp rows
disp tiles
quit
disp value
disp pos
disp y
disp x
quit
disp pos
disp value
disp tile
quit
y
x
x, y = position
position = [1,2]
quit
val && true
val = [3,4]
val && true
val = 1
val && true
val = nil
val == nil
val == true
val = 1
val == true
val = nil
30.is_a?(Integer)
3.is_a?(Integer)
[3,4].is_a?(Integer)
quit
parse_val('3,4')
end
  string.split(",").map(&:to_i)
def parse_val(string)
['3','4'].map(&:to_i)
Integer(('3,4').split(","))
('3,4').split(",")
parse_val("3,4")
parse_val(3,4)
end
